事务
什么是事务 
	事务是指一系列操作步骤，这一系列的操作步骤，要么完全地执行，要么完全地不执行。 


事务4个属性：原子性、一致性、隔离性、持久性。这四个属性通常称为ACID特性。
	原子性（atomicity）：事务中包括的操作要么都做，要么都不做。
	一致性（consistency）。事务必须是使数据库从一个一致性状态变到另一个一致性状态。一致性与原子性是密切相关的。
	隔离性（isolation）。一个事务的执行不能被其他事务干扰。即一个事务内部的操作及使用的数据对并发的其他事务是隔离的，并发执行的各个事务之间不能互相干扰。
	持久性（durability）。持久性也称永久性（permanence），指一个事务一旦提交，它对数据库中数据的改变就应该是永久性的。接下来的其他操作或故障不应该对其有任何影响。

Redis 中的事务（transaction）：
	是一组命令的集合，至少是两个或两个以上的命令，redis 事务保证这些命令被执行时中间不会被任何其他操作打断。 
	redis事务其实是指运用事务的思想实现一组集合命令的执行，没有回滚的概念，严格意义上没有事务。
	
	redis为什么没有回滚？
	redis本身是高性能高并发的nosql数据库
	
	redis 中事务命令：
		multi  - setAutoCommoit（false）-事务开启
			作用：标记一个事务的开始。事务内的多条命令会按照先后顺序被放进一个队列当中。 返回值：总是返回 ok 
		exec   -执行
			作用：执行所有事务块内的命令 返回值：事务内的所有执行语句内容，事务被打断（影响）返回 nil 
		discard   -取消
			作用：取消事务，放弃执行事务块内的所有命令返回值：总是返回 ok 
		watch   -监视某个或者某几个key的值的变化   语法：watch key [key ...] 
			作用：监视一个(或多个) key ，如果在事务执行之前这个(或这些) key 被其他命令所改动，那么事务将被打断。 返回值：总是返回 ok 
			监视若想生效必须在事务开启前监视key，也就是在multi之前，而且使用监视的客户端必须是和执行事务的客户端是一致的
			并且事务中执行的key操作必须入队列后，有其他客户端修改这个key，事务才会执行失败
		unwatch –取消监视
			作用：取消 WATCH 命令对所有 key 的监视。如果在执行 WATCH 命令之后， EXEC 命令或 DISCARD 命令先被执行了的话，那么就不需要再执行 UNWATCH 了返回值：总是返回 ok
			watch命令是客户端监视，当客户端断开连接就会取消监视
			
	redis事务的队列中有错误命令或其他错误(内存不足)，事务执行失败
	在 exec 执行后的所产生的错误，  即使事务中有某个/某些命令在执行时产生了错误，事务中的其他命令仍然会继续执行。 
		Redis 在事务失败时不进行回滚，而是继续执行余下的命令。 
		Redis 这种设计原则是：Redis 命令只会因为错误的语法而失败（这些问题不能在入队时发现），或是命令用在了错误类型的键上面，失败的命令并不是 Redis 导致，而是由编程错误造成的，这样错误应该在开发的过程中被发现，生产环境中不应出现语法的错误。就是在程序的运行环境中不应该出现语法的错误。而 Redis 能够保证正确的命令一定会被执行。
		再者不需要对回滚进行支持，所以 Redis 的内部可以保持简单且快速。 

redis持久化
	什么是持久化，将数据存储在硬盘上
	redis将数据存储在内存当中若linux宕机或断电或redis数据崩溃，则数据丢失提供两种持久化
	redis提供两种持久化：
		
	Redis Database（RDB），就是在指定的时间间隔内将内存中的数据集快照写入磁盘，数据恢复时将快照文件直接再读到内存。 
		
		RDB 保存了在某个时间点的数据集（全部数据）。存储在一个二进制文件中，只有一个文件。默认是 dump.rdb。RDB 技术非常适合做备份，可以保存最近一个小时，一天，一个月的全部数据。保存数据是在单独的进程中写文件，不影响 Redis 的正常使用。RDB 恢复数据时比其他 AOF 速度快。 
		
		配置：
		①：配置执行 RDB 生成快照文件的时间策略。 
			对Redis进行设置,让它在“ N 秒内数据集至少有 M 个 key 改动”这一条件被满足时，自动保存一次数据集。 
			配置格式：save  <seconds>  <changes> 
						save 900 1
						save 300 10 
						save 60 10000 
 
		②：dbfilename：设置 RDB 的文件名，默认文件名为 dump.rdb 
		③：dir：指定 RDB 文件的存储位置，默认是 ./ 当前目录 
		
		优缺点：
		优点：由于存储的是数据快照文件，恢复数据很方便，也比较快 ，容灾备份
		缺点： 
		1）会丢失最后一次快照以后更改的数据。如果你的应用能容忍一定数据的丢失，那么使用 rdb 是不错的选择；如果你不能容忍一定数据的丢失，使用 rdb 就不是一个很好的选择。 
		2）由于需要经常操作磁盘，RDB 会分出一个子进程。如果你的 redis 数据库很大的话，子进程占用比较多的时间，并且可能会影响 Redis 暂停服务一段时间（millisecond 级别），如果你的数据库超级大并且你的服务器 CPU 比较弱，有可能是会达到一秒。 
		
redis慢查询
	Redis是单线程的，所有的请求发送过来的时候都是需要排队的（先进先出的队列），当一个查询语句非常耗时的话，在它之后的语句都是需要排队等待的，
	这种情况经常会造成客户端超时。
	在Redis中配置慢查询有两种方式，一种是修改配置文件，另一种是使用动态命令去配置：
	#阈值，超出此时间段的命令会被记录为慢查询，单位为微妙，默认为10000微妙；注：1秒=10000微妙
	#如果设置为0的话，则会记录全部redis命令，设置为<0则全部不记录
	config set slowlog-log-slower-than 10000
	config set slowlog-max-len 1000
	#用户更新配置
	config rewrite
	
	#获取当前慢查询条数
	slowlog len
	#获取n条慢查询日志，n为空则查询全部
	slowlog get [n]
	
	查看慢查询日志:
	slowlog get
	1) 1)(integer) 4 				#日志的唯一标识（uid）
	   2)(integer) 1378781447 		#日志执行的unix时间戳
	   3)(integer) 13 				#命令执行的时长微妙为计算
	   4) 1) "SET"
		  2) "database"
		  3) "Redis"