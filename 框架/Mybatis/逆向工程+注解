1、导入逆向工程配置文件，并进行修改配置，详情参考GeneratorMapper.xml

2、pom加入mybatis插件
              <!--mybatis代码自动生成插件-->
              <plugin>
                  <groupId>org.mybatis.generator</groupId>
                  <artifactId>mybatis-generator-maven-plugin</artifactId>
                  <version>1.3.7</version>
                  <configuration>
                      <!--配置文件的位置-->
                      <configurationFile>GeneratorMapper.xml</configurationFile>
                      <verbose>true</verbose>
                      <overwrite>true</overwrite>
                  </configuration>
              </plugin>

3、随后在maven插件中运行mybatis插件，生成mapper接口和xml，model

常用注解：
    mybatis通过动态代理方式给mapper生成实现类，并且会自动交给spring管理，两种方式：
       1、在mapper接口上加 @Mapper
       @Mapper作用：接口在编译时会生成相应的实现类
       2、@MapperScan("mapper接口所在包")


    注意：src/main/java目录下默认情况下，xml映射文件不会编译到target的class目录下
        1、所以需要在pom.xml文件中配置resource
         <resources>
             <resource>
                 <directory>src/main/java</directory>
                 <includes>
                     <include>**/*.xml</include>
                 </includes>
             </resource>
         </resources>
        2、或者在springboot的配置文件中扫描xml，在resources下创建xml
            # 告诉Mybatis映射文件的路径
            mybatis.mapper-locations=classpath:mapper/*.xml
        3、通过纯注解方式，抛弃xml
        @Insert、@Delete、@Update、@Select
